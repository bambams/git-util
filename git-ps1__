#!/bin/bash

dirty_depends() {
    while read f; do
        GIT_DIR="$f/.git" GIT_WORK_TREE="$f" \
                git diff --exit-code HEAD &>/dev/null;

        if [[ $? != 0 ]]; then
            echo $?;
        fi;
    done < <(git depends &>/dev/null);

    echo 0;
}

num_commits() {
    num_commits="$(git log --oneline "$1..$2" |
            wc -l | awk '{print $1}')";

    if [ "$num_commits" != 0 ]; then
        /bin/echo -en "+${num_commits}";
    fi;
}

upstream() {
    local branch="$1";
    local merge="$(git config "branch.$branch.merge" |
            sed -r 's/^refs\/(heads|remotes)\///')";
    local remote="$(git config "branch.$branch.remote")";

    if [ "$remote" != . ]; then
        echo -n "$remote/";
    fi;

    echo "$merge";
};

branch="$(git branch 2>/dev/null | grep '^\*' | sed -e 's/^\* //')";
dirty="$(git diff --exit-code HEAD &>/dev/null; echo $?)";
depends="$(dirty_depends)";

if [[ $(tty) =~ /dev/pt ]]; then
    branch_color='\[\e[1;32m\]';
    depends_color='\[\e[1;31m\]';
    dirty_color='\[\e[1;31m\]';
    reset_color='\[\e[0m\]';
    upstream_color='\[\e[1;33m\]';
fi;

if [ ! -z "$branch" ]; then
    /bin/echo -en " (";

    if [ "$dirty" = 1 ]; then
        /bin/echo -en "${dirty_color}*${reset_color}";
    fi;

    if [[ $depends != 0 ]]; then
        /bin/echo -en "${depends_color}%${reset_color}";
    fi;

    /bin/echo -en "${branch_color}${branch}${reset_color}";

    upstream="$(upstream "$branch")";

    if [ ! -z "$upstream" -a "$upstream" != / ]; then
        num_commits "$upstream" "$branch";
        /bin/echo -en " <- ${upstream_color}${upstream}${reset_color}";
        num_commits "$branch" "$upstream";
    fi;

    /bin/echo -n ')';
fi;
